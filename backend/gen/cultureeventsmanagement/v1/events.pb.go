// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: cultureeventsmanagement/v1/events.proto

package cultureeventsmanagementv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message for streaming events.
// This can include filtering options in the future if needed.
type StreamCulturalEventsManagementEventsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional filter parameter (e.g., event type or keyword).
	Areas         []string `protobuf:"bytes,1,rep,name=areas,proto3" json:"areas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamCulturalEventsManagementEventsRequest) Reset() {
	*x = StreamCulturalEventsManagementEventsRequest{}
	mi := &file_cultureeventsmanagement_v1_events_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamCulturalEventsManagementEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamCulturalEventsManagementEventsRequest) ProtoMessage() {}

func (x *StreamCulturalEventsManagementEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cultureeventsmanagement_v1_events_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamCulturalEventsManagementEventsRequest.ProtoReflect.Descriptor instead.
func (*StreamCulturalEventsManagementEventsRequest) Descriptor() ([]byte, []int) {
	return file_cultureeventsmanagement_v1_events_proto_rawDescGZIP(), []int{0}
}

func (x *StreamCulturalEventsManagementEventsRequest) GetAreas() []string {
	if x != nil {
		return x.Areas
	}
	return nil
}

// Represents a real-time event.
type StreamCulturalEventsManagementEventsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for the event.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Timestamp in epoch seconds.
	Timestamp int64 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// NEW – parsed content (replaces the old “payload” string)
	CulturalEvents []*CulturalEventsEntry `protobuf:"bytes,3,rep,name=cultural_events,json=culturalEvents,proto3" json:"cultural_events,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *StreamCulturalEventsManagementEventsResponse) Reset() {
	*x = StreamCulturalEventsManagementEventsResponse{}
	mi := &file_cultureeventsmanagement_v1_events_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamCulturalEventsManagementEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamCulturalEventsManagementEventsResponse) ProtoMessage() {}

func (x *StreamCulturalEventsManagementEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cultureeventsmanagement_v1_events_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamCulturalEventsManagementEventsResponse.ProtoReflect.Descriptor instead.
func (*StreamCulturalEventsManagementEventsResponse) Descriptor() ([]byte, []int) {
	return file_cultureeventsmanagement_v1_events_proto_rawDescGZIP(), []int{1}
}

func (x *StreamCulturalEventsManagementEventsResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StreamCulturalEventsManagementEventsResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *StreamCulturalEventsManagementEventsResponse) GetCulturalEvents() []*CulturalEventsEntry {
	if x != nil {
		return x.CulturalEvents
	}
	return nil
}

// ────────────────────────────────────────────────────────────────
// Nested message definition
// ────────────────────────────────────────────────────────────────
type CulturalEventsEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventDate     string                 `protobuf:"bytes,1,opt,name=event_date,json=eventDate,proto3" json:"event_date,omitempty"`
	EventTime     string                 `protobuf:"bytes,2,opt,name=event_time,json=eventTime,proto3" json:"event_time,omitempty"`
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Venue         string                 `protobuf:"bytes,4,opt,name=venue,proto3" json:"venue,omitempty"`
	Area          string                 `protobuf:"bytes,5,opt,name=area,proto3" json:"area,omitempty"`
	Category      string                 `protobuf:"bytes,6,opt,name=category,proto3" json:"category,omitempty"`
	Price         string                 `protobuf:"bytes,7,opt,name=price,proto3" json:"price,omitempty"`
	Link          string                 `protobuf:"bytes,8,opt,name=link,proto3" json:"link,omitempty"`
	Description   string                 `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CulturalEventsEntry) Reset() {
	*x = CulturalEventsEntry{}
	mi := &file_cultureeventsmanagement_v1_events_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CulturalEventsEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CulturalEventsEntry) ProtoMessage() {}

func (x *CulturalEventsEntry) ProtoReflect() protoreflect.Message {
	mi := &file_cultureeventsmanagement_v1_events_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CulturalEventsEntry.ProtoReflect.Descriptor instead.
func (*CulturalEventsEntry) Descriptor() ([]byte, []int) {
	return file_cultureeventsmanagement_v1_events_proto_rawDescGZIP(), []int{2}
}

func (x *CulturalEventsEntry) GetEventDate() string {
	if x != nil {
		return x.EventDate
	}
	return ""
}

func (x *CulturalEventsEntry) GetEventTime() string {
	if x != nil {
		return x.EventTime
	}
	return ""
}

func (x *CulturalEventsEntry) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CulturalEventsEntry) GetVenue() string {
	if x != nil {
		return x.Venue
	}
	return ""
}

func (x *CulturalEventsEntry) GetArea() string {
	if x != nil {
		return x.Area
	}
	return ""
}

func (x *CulturalEventsEntry) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *CulturalEventsEntry) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *CulturalEventsEntry) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *CulturalEventsEntry) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

var File_cultureeventsmanagement_v1_events_proto protoreflect.FileDescriptor

const file_cultureeventsmanagement_v1_events_proto_rawDesc = "" +
	"\n" +
	"'cultureeventsmanagement/v1/events.proto\x12\x1acultureeventsmanagement.v1\"C\n" +
	"+StreamCulturalEventsManagementEventsRequest\x12\x14\n" +
	"\x05areas\x18\x01 \x03(\tR\x05areas\"\xb6\x01\n" +
	",StreamCulturalEventsManagementEventsResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x03R\ttimestamp\x12X\n" +
	"\x0fcultural_events\x18\x03 \x03(\v2/.cultureeventsmanagement.v1.CulturalEventsEntryR\x0eculturalEvents\"\xfb\x01\n" +
	"\x13CulturalEventsEntry\x12\x1d\n" +
	"\n" +
	"event_date\x18\x01 \x01(\tR\teventDate\x12\x1d\n" +
	"\n" +
	"event_time\x18\x02 \x01(\tR\teventTime\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12\x14\n" +
	"\x05venue\x18\x04 \x01(\tR\x05venue\x12\x12\n" +
	"\x04area\x18\x05 \x01(\tR\x04area\x12\x1a\n" +
	"\bcategory\x18\x06 \x01(\tR\bcategory\x12\x14\n" +
	"\x05price\x18\a \x01(\tR\x05price\x12\x12\n" +
	"\x04link\x18\b \x01(\tR\x04link\x12 \n" +
	"\vdescription\x18\t \x01(\tR\vdescription2\xe1\x01\n" +
	"\x1fCulturalEventsManagementService\x12\xbd\x01\n" +
	"$StreamCulturalEventsManagementEvents\x12G.cultureeventsmanagement.v1.StreamCulturalEventsManagementEventsRequest\x1aH.cultureeventsmanagement.v1.StreamCulturalEventsManagementEventsResponse\"\x000\x01BBZ@backend/gen/cultureeventsmanagement/v1;cultureeventsmanagementv1b\x06proto3"

var (
	file_cultureeventsmanagement_v1_events_proto_rawDescOnce sync.Once
	file_cultureeventsmanagement_v1_events_proto_rawDescData []byte
)

func file_cultureeventsmanagement_v1_events_proto_rawDescGZIP() []byte {
	file_cultureeventsmanagement_v1_events_proto_rawDescOnce.Do(func() {
		file_cultureeventsmanagement_v1_events_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_cultureeventsmanagement_v1_events_proto_rawDesc), len(file_cultureeventsmanagement_v1_events_proto_rawDesc)))
	})
	return file_cultureeventsmanagement_v1_events_proto_rawDescData
}

var file_cultureeventsmanagement_v1_events_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_cultureeventsmanagement_v1_events_proto_goTypes = []any{
	(*StreamCulturalEventsManagementEventsRequest)(nil),  // 0: cultureeventsmanagement.v1.StreamCulturalEventsManagementEventsRequest
	(*StreamCulturalEventsManagementEventsResponse)(nil), // 1: cultureeventsmanagement.v1.StreamCulturalEventsManagementEventsResponse
	(*CulturalEventsEntry)(nil),                          // 2: cultureeventsmanagement.v1.CulturalEventsEntry
}
var file_cultureeventsmanagement_v1_events_proto_depIdxs = []int32{
	2, // 0: cultureeventsmanagement.v1.StreamCulturalEventsManagementEventsResponse.cultural_events:type_name -> cultureeventsmanagement.v1.CulturalEventsEntry
	0, // 1: cultureeventsmanagement.v1.CulturalEventsManagementService.StreamCulturalEventsManagementEvents:input_type -> cultureeventsmanagement.v1.StreamCulturalEventsManagementEventsRequest
	1, // 2: cultureeventsmanagement.v1.CulturalEventsManagementService.StreamCulturalEventsManagementEvents:output_type -> cultureeventsmanagement.v1.StreamCulturalEventsManagementEventsResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_cultureeventsmanagement_v1_events_proto_init() }
func file_cultureeventsmanagement_v1_events_proto_init() {
	if File_cultureeventsmanagement_v1_events_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_cultureeventsmanagement_v1_events_proto_rawDesc), len(file_cultureeventsmanagement_v1_events_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cultureeventsmanagement_v1_events_proto_goTypes,
		DependencyIndexes: file_cultureeventsmanagement_v1_events_proto_depIdxs,
		MessageInfos:      file_cultureeventsmanagement_v1_events_proto_msgTypes,
	}.Build()
	File_cultureeventsmanagement_v1_events_proto = out.File
	file_cultureeventsmanagement_v1_events_proto_goTypes = nil
	file_cultureeventsmanagement_v1_events_proto_depIdxs = nil
}
