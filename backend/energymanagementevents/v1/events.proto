syntax = "proto3";

package energymanagementevents.v1;

option go_package = "backend/gen/energymanagementevents/v1;energymanagementeventsv1";

// The EnergyManagementEventsService defines the streaming endpoint for real-time events.
service EnergyManagementEventsService {
    // StreamEnergyManagementEvents establishes a grpc-web streaming endpoint that pushes StreamEnergyManagementEventsResponse messages.
    rpc StreamEnergyManagementEvents(StreamEnergyManagementEventsRequest) returns (stream StreamEnergyManagementEventsResponse) {}
}

// Request message for streaming events.
// This can include filtering options in the future if needed.
message StreamEnergyManagementEventsRequest {
    // Optional filter parameter (e.g., event type or keyword).
    string filter = 1;
}

// Represents a real-time event.
message StreamEnergyManagementEventsResponse {
    // Unique identifier for the event.
    string id = 1;
    // Timestamp in epoch seconds.
    int64 timestamp = 2;

    // NEW – parsed content (replaces the old “payload” string)
    repeated OutageSummaryEntry outage_summary = 3;
}

// ────────────────────────────────────────────────────────────────
// Nested message definition
// ────────────────────────────────────────────────────────────────
message OutageSummaryEntry {
  string        timestamp   = 1;
  repeated string locations = 2;
  string        summary     = 3;
  string        severity    = 4;
  string        start_time  = 5;
  string        end_time    = 6;
  string        reason      = 7;
  string        advice      = 8;
}

// // Enumeration of possible event types.
// enum EnergyManagementEventsType {
//     // Unspecified event type.
//     EVENT_TYPE_UNKNOWN_UNSPECIFIED = 0;
//     EVENT_TYPE_TRAFFIC = 1;
//     EVENT_TYPE_WASTE = 2;
//     EVENT_TYPE_ENERGY = 3;
//     EVENT_TYPE_EMERGENCY = 4;
// }