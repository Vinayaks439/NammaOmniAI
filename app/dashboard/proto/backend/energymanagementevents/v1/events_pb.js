// source: backend/energymanagementevents/v1/events.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.energymanagementevents.v1.OutageSummaryEntry', null, global);
goog.exportSymbol('proto.energymanagementevents.v1.StreamEnergyManagementEventsRequest', null, global);
goog.exportSymbol('proto.energymanagementevents.v1.StreamEnergyManagementEventsResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.energymanagementevents.v1.StreamEnergyManagementEventsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.energymanagementevents.v1.StreamEnergyManagementEventsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.energymanagementevents.v1.StreamEnergyManagementEventsRequest.displayName = 'proto.energymanagementevents.v1.StreamEnergyManagementEventsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.energymanagementevents.v1.StreamEnergyManagementEventsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.energymanagementevents.v1.StreamEnergyManagementEventsResponse.repeatedFields_, null);
};
goog.inherits(proto.energymanagementevents.v1.StreamEnergyManagementEventsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.energymanagementevents.v1.StreamEnergyManagementEventsResponse.displayName = 'proto.energymanagementevents.v1.StreamEnergyManagementEventsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.energymanagementevents.v1.OutageSummaryEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.energymanagementevents.v1.OutageSummaryEntry.repeatedFields_, null);
};
goog.inherits(proto.energymanagementevents.v1.OutageSummaryEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.energymanagementevents.v1.OutageSummaryEntry.displayName = 'proto.energymanagementevents.v1.OutageSummaryEntry';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.energymanagementevents.v1.StreamEnergyManagementEventsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.energymanagementevents.v1.StreamEnergyManagementEventsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.energymanagementevents.v1.StreamEnergyManagementEventsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.energymanagementevents.v1.StreamEnergyManagementEventsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
filter: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.energymanagementevents.v1.StreamEnergyManagementEventsRequest}
 */
proto.energymanagementevents.v1.StreamEnergyManagementEventsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.energymanagementevents.v1.StreamEnergyManagementEventsRequest;
  return proto.energymanagementevents.v1.StreamEnergyManagementEventsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.energymanagementevents.v1.StreamEnergyManagementEventsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.energymanagementevents.v1.StreamEnergyManagementEventsRequest}
 */
proto.energymanagementevents.v1.StreamEnergyManagementEventsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.energymanagementevents.v1.StreamEnergyManagementEventsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.energymanagementevents.v1.StreamEnergyManagementEventsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.energymanagementevents.v1.StreamEnergyManagementEventsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.energymanagementevents.v1.StreamEnergyManagementEventsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilter();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string filter = 1;
 * @return {string}
 */
proto.energymanagementevents.v1.StreamEnergyManagementEventsRequest.prototype.getFilter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.energymanagementevents.v1.StreamEnergyManagementEventsRequest} returns this
 */
proto.energymanagementevents.v1.StreamEnergyManagementEventsRequest.prototype.setFilter = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.energymanagementevents.v1.StreamEnergyManagementEventsResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.energymanagementevents.v1.StreamEnergyManagementEventsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.energymanagementevents.v1.StreamEnergyManagementEventsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.energymanagementevents.v1.StreamEnergyManagementEventsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.energymanagementevents.v1.StreamEnergyManagementEventsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, ""),
timestamp: jspb.Message.getFieldWithDefault(msg, 2, 0),
outageSummaryList: jspb.Message.toObjectList(msg.getOutageSummaryList(),
    proto.energymanagementevents.v1.OutageSummaryEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.energymanagementevents.v1.StreamEnergyManagementEventsResponse}
 */
proto.energymanagementevents.v1.StreamEnergyManagementEventsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.energymanagementevents.v1.StreamEnergyManagementEventsResponse;
  return proto.energymanagementevents.v1.StreamEnergyManagementEventsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.energymanagementevents.v1.StreamEnergyManagementEventsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.energymanagementevents.v1.StreamEnergyManagementEventsResponse}
 */
proto.energymanagementevents.v1.StreamEnergyManagementEventsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 3:
      var value = new proto.energymanagementevents.v1.OutageSummaryEntry;
      reader.readMessage(value,proto.energymanagementevents.v1.OutageSummaryEntry.deserializeBinaryFromReader);
      msg.addOutageSummary(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.energymanagementevents.v1.StreamEnergyManagementEventsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.energymanagementevents.v1.StreamEnergyManagementEventsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.energymanagementevents.v1.StreamEnergyManagementEventsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.energymanagementevents.v1.StreamEnergyManagementEventsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getOutageSummaryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.energymanagementevents.v1.OutageSummaryEntry.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.energymanagementevents.v1.StreamEnergyManagementEventsResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.energymanagementevents.v1.StreamEnergyManagementEventsResponse} returns this
 */
proto.energymanagementevents.v1.StreamEnergyManagementEventsResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 timestamp = 2;
 * @return {number}
 */
proto.energymanagementevents.v1.StreamEnergyManagementEventsResponse.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.energymanagementevents.v1.StreamEnergyManagementEventsResponse} returns this
 */
proto.energymanagementevents.v1.StreamEnergyManagementEventsResponse.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated OutageSummaryEntry outage_summary = 3;
 * @return {!Array<!proto.energymanagementevents.v1.OutageSummaryEntry>}
 */
proto.energymanagementevents.v1.StreamEnergyManagementEventsResponse.prototype.getOutageSummaryList = function() {
  return /** @type{!Array<!proto.energymanagementevents.v1.OutageSummaryEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.energymanagementevents.v1.OutageSummaryEntry, 3));
};


/**
 * @param {!Array<!proto.energymanagementevents.v1.OutageSummaryEntry>} value
 * @return {!proto.energymanagementevents.v1.StreamEnergyManagementEventsResponse} returns this
*/
proto.energymanagementevents.v1.StreamEnergyManagementEventsResponse.prototype.setOutageSummaryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.energymanagementevents.v1.OutageSummaryEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.energymanagementevents.v1.OutageSummaryEntry}
 */
proto.energymanagementevents.v1.StreamEnergyManagementEventsResponse.prototype.addOutageSummary = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.energymanagementevents.v1.OutageSummaryEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.energymanagementevents.v1.StreamEnergyManagementEventsResponse} returns this
 */
proto.energymanagementevents.v1.StreamEnergyManagementEventsResponse.prototype.clearOutageSummaryList = function() {
  return this.setOutageSummaryList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.energymanagementevents.v1.OutageSummaryEntry.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.energymanagementevents.v1.OutageSummaryEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.energymanagementevents.v1.OutageSummaryEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.energymanagementevents.v1.OutageSummaryEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.energymanagementevents.v1.OutageSummaryEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
timestamp: jspb.Message.getFieldWithDefault(msg, 1, ""),
locationsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
summary: jspb.Message.getFieldWithDefault(msg, 3, ""),
severity: jspb.Message.getFieldWithDefault(msg, 4, ""),
startTime: jspb.Message.getFieldWithDefault(msg, 5, ""),
endTime: jspb.Message.getFieldWithDefault(msg, 6, ""),
reason: jspb.Message.getFieldWithDefault(msg, 7, ""),
advice: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.energymanagementevents.v1.OutageSummaryEntry}
 */
proto.energymanagementevents.v1.OutageSummaryEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.energymanagementevents.v1.OutageSummaryEntry;
  return proto.energymanagementevents.v1.OutageSummaryEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.energymanagementevents.v1.OutageSummaryEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.energymanagementevents.v1.OutageSummaryEntry}
 */
proto.energymanagementevents.v1.OutageSummaryEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimestamp(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addLocations(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSummary(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSeverity(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setStartTime(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndTime(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdvice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.energymanagementevents.v1.OutageSummaryEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.energymanagementevents.v1.OutageSummaryEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.energymanagementevents.v1.OutageSummaryEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.energymanagementevents.v1.OutageSummaryEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimestamp();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLocationsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getSummary();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSeverity();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getStartTime();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getEndTime();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getAdvice();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string timestamp = 1;
 * @return {string}
 */
proto.energymanagementevents.v1.OutageSummaryEntry.prototype.getTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.energymanagementevents.v1.OutageSummaryEntry} returns this
 */
proto.energymanagementevents.v1.OutageSummaryEntry.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string locations = 2;
 * @return {!Array<string>}
 */
proto.energymanagementevents.v1.OutageSummaryEntry.prototype.getLocationsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.energymanagementevents.v1.OutageSummaryEntry} returns this
 */
proto.energymanagementevents.v1.OutageSummaryEntry.prototype.setLocationsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.energymanagementevents.v1.OutageSummaryEntry} returns this
 */
proto.energymanagementevents.v1.OutageSummaryEntry.prototype.addLocations = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.energymanagementevents.v1.OutageSummaryEntry} returns this
 */
proto.energymanagementevents.v1.OutageSummaryEntry.prototype.clearLocationsList = function() {
  return this.setLocationsList([]);
};


/**
 * optional string summary = 3;
 * @return {string}
 */
proto.energymanagementevents.v1.OutageSummaryEntry.prototype.getSummary = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.energymanagementevents.v1.OutageSummaryEntry} returns this
 */
proto.energymanagementevents.v1.OutageSummaryEntry.prototype.setSummary = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string severity = 4;
 * @return {string}
 */
proto.energymanagementevents.v1.OutageSummaryEntry.prototype.getSeverity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.energymanagementevents.v1.OutageSummaryEntry} returns this
 */
proto.energymanagementevents.v1.OutageSummaryEntry.prototype.setSeverity = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string start_time = 5;
 * @return {string}
 */
proto.energymanagementevents.v1.OutageSummaryEntry.prototype.getStartTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.energymanagementevents.v1.OutageSummaryEntry} returns this
 */
proto.energymanagementevents.v1.OutageSummaryEntry.prototype.setStartTime = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string end_time = 6;
 * @return {string}
 */
proto.energymanagementevents.v1.OutageSummaryEntry.prototype.getEndTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.energymanagementevents.v1.OutageSummaryEntry} returns this
 */
proto.energymanagementevents.v1.OutageSummaryEntry.prototype.setEndTime = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string reason = 7;
 * @return {string}
 */
proto.energymanagementevents.v1.OutageSummaryEntry.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.energymanagementevents.v1.OutageSummaryEntry} returns this
 */
proto.energymanagementevents.v1.OutageSummaryEntry.prototype.setReason = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string advice = 8;
 * @return {string}
 */
proto.energymanagementevents.v1.OutageSummaryEntry.prototype.getAdvice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.energymanagementevents.v1.OutageSummaryEntry} returns this
 */
proto.energymanagementevents.v1.OutageSummaryEntry.prototype.setAdvice = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


goog.object.extend(exports, proto.energymanagementevents.v1);
